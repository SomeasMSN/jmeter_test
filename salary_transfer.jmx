<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="WING-SALARY-TRANFER" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="wingApimUrl" elementType="Argument">
            <stringProp name="Argument.name">wingApimUrl</stringProp>
            <stringProp name="Argument.value">uat-gateway.wingmoney.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="wingBaseUrl" elementType="Argument">
            <stringProp name="Argument.name">wingBaseUrl</stringProp>
            <stringProp name="Argument.value">gwtest.wingmoney.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userDeviceID" elementType="Argument">
            <stringProp name="Argument.name">userDeviceID</stringProp>
            <stringProp name="Argument.value">822880D3-3297-4ADF-8411-5CF307965E22</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">012784556</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="deviceID" elementType="Argument">
            <stringProp name="Argument.name">deviceID</stringProp>
            <stringProp name="Argument.value">822880D3-3297-4ADF-8411-5CF307965E22</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="wingCoreUrl" elementType="Argument">
            <stringProp name="Argument.name">wingCoreUrl</stringProp>
            <stringProp name="Argument.value">10.120.100.95</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="wingApimUrlQA" elementType="Argument">
            <stringProp name="Argument.name">wingApimUrlQA</stringProp>
            <stringProp name="Argument.value">qa-gateway.wingmoney.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration " enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">select 1 from dual</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties">No</stringProp>
        <stringProp name="dataSource">dbConnection</stringProp>
        <stringProp name="dbUrl">jdbc:oracle:thin:@10.120.10.17:1530/wingpdb</stringProp>
        <stringProp name="driver">oracle.jdbc.OracleDriver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">Wing@1234</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">TRANSACTION_READ_COMMITTED</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">MWING</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="url path" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="validate-salary" elementType="Argument">
            <stringProp name="Argument.name">validate-salary</stringProp>
            <stringProp name="Argument.value">/salary-transfer/v1/salary-transfer/validate?</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="commit-salary" elementType="Argument">
            <stringProp name="Argument.name">commit-salary</stringProp>
            <stringProp name="Argument.value">/salary-transfer/v1/salary-transfer/commit?</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Notification-engine" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">1</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Sent Notification To Customer" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">notification_to_customer.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">wing_account,payroll,amount,txn_id,service_type,notification_type</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.thread</stringProp>
          </CSVDataSet>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sent Notification To Customer" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;wing_account&quot;: &quot;${wing_account}&quot;,&#xd;
    &quot;sms_content&quot;: &quot;${payroll} \nAmt: USD ${amount}\nTID : ${txn_id}&quot;,&#xd;
    &quot;txn_id&quot;: &quot;${txn_id}&quot;,&#xd;
    &quot;service_type&quot;: &quot;PAYROLL&quot;,&#xd;
    &quot;notification_type&quot;: &quot;PAYEE&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/notification-engine/v1/api/customer/notification/sent</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2022-08-10T15:39:50.6704937</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2022-08-10T15:39:50.6704937</stringProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- code" enabled="true">
                <stringProp name="JSON_PATH">$.code</stringProp>
                <stringProp name="EXPECTED_VALUE">SUCCESS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- message" enabled="true">
                <stringProp name="JSON_PATH">$.message</stringProp>
                <stringProp name="EXPECTED_VALUE">Successfully</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Sent Notification To retailer" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">notification_to_retailer.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">wing_account,payroll,amount,txn_id,service_type,notification_type,url,type,account_no,expire_date,sub_id,sub_pk_ccy</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.thread</stringProp>
          </CSVDataSet>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sent Notification To retailer" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;wing_account&quot;: &quot;077678901&quot;,&#xd;
    &quot;sms_content&quot;: &quot;Success cashout\nAmt: USD 20.00\nTID : abcdaef12345&quot;,&#xd;
    &quot;txn_id&quot;: &quot;abcdABCef123a4511&quot;,&#xd;
    &quot;service_type&quot;: &quot;PAYROLE&quot;,&#xd;
    &quot;notification_type&quot;: &quot;PAYEE&quot;,&#xd;
    &quot;url&quot;: &quot;${url}&quot;,&#xd;
    &quot;type&quot;: &quot;${type}&quot;,&#xd;
    &quot;addl_data&quot;: [&#xd;
        {&#xd;
            &quot;field_name&quot;: &quot;ACCOUNT_NO&quot;,&#xd;
            &quot;value&quot;: &quot;${account_no}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;field_name&quot;: &quot;EXPIRE_DATE&quot;,&#xd;
            &quot;value&quot;: &quot;${expired_date}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;field_name&quot;: &quot;SUB_ID&quot;,&#xd;
            &quot;value&quot;: &quot;${sub_id}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;field_name&quot;: &quot;SUB_PK_CCY&quot;,&#xd;
            &quot;value&quot;: &quot;${sub_pk_ccy}&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/notification-engine/v1/api/retailer/notification/sent</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2022-08-11T13:05:09.707087</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2022-08-11T13:05:09.707087</stringProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- code" enabled="true">
                <stringProp name="JSON_PATH">$.code</stringProp>
                <stringProp name="EXPECTED_VALUE">SUCCESS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- message" enabled="true">
                <stringProp name="JSON_PATH">$.message</stringProp>
                <stringProp name="EXPECTED_VALUE">Successfully</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Sent Notification To WCX EKYC" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Sent Notification To WCX EKYC" enabled="true"/>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">notification_to_wcx_ekyc.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">wing_account,payroll,amount,txn_id,service_type,notification_type</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sent Notification To WCX EKYC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;wing_account&quot;: &quot;${wing_account}&quot;,&#xd;
    &quot;sms_content&quot;: &quot;${payroll} \nAmt: USD ${amount}\nTID : ${txn_id}&quot;,&#xd;
    &quot;txn_id&quot;: &quot;${txn_id}&quot;,&#xd;
    &quot;service_type&quot;: &quot;PAYROLL&quot;,&#xd;
    &quot;notification_type&quot;: &quot;PAYEE&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">uat-gateway.wingmoney.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/notification-engine/v1/api/notification/sent</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2022-08-11T13:45:29.0428796</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Created from cURL on 2022-08-11T13:45:29.0428796</stringProp>
                </HeaderManager>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- code" enabled="true">
                  <stringProp name="JSON_PATH">$.code</stringProp>
                  <stringProp name="EXPECTED_VALUE">SUCCESS</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- message" enabled="true">
                  <stringProp name="JSON_PATH">$.message</stringProp>
                  <stringProp name="EXPECTED_VALUE">Successfully</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Negative Case" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sent Notification To Customer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/notification-engine/v1/api/customer/notification/sent</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2022-08-10T15:39:50.6704937</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2022-08-10T15:39:50.6704937</stringProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="51508">400</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-gateway.wingmoney.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/notification-engine/v1/api/customer/notification/sent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2022-08-19T11:03:30.3432565</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2022-08-19T11:03:30.3432565</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51508">400</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Salary Transfer" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="TestPlan.comments">This script used for integration testing</stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Database" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="ScheduleID" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">String scheduleUpdate =&quot;&apos;17731010&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731051&apos;,&apos;17731052&apos;,&apos;17731053&apos;,&apos;17731054&apos;,&apos;17731055&apos;,&apos;17731056&apos;,&apos;17731057&apos;,&apos;17731058&apos;,&apos;17731059&apos;,&apos;17731060&apos;,&apos;17731061&apos;,&apos;17731062&apos;,&apos;17731063&apos;,&apos;17731064&apos;,&apos;17731065&apos;,&apos;17731066&apos;,&apos;17731067&apos;,&apos;17731068&apos;,&apos;17731069&apos;,&apos;17731070&apos;,&apos;17731071&apos;,&apos;17731072&apos;,&apos;17731073&apos;,&apos;17731074&apos;,&apos;17731075&apos;,&apos;17731076&apos;,&apos;17731077&apos;,&apos;17731078&apos;,&apos;17731079&apos;,&apos;17731080&apos;,&apos;17731081&apos;,&apos;17731082&apos;,&apos;17731083&apos;,&apos;17731084&apos;,&apos;17731085&apos;,&apos;17731086&apos;,&apos;17731087&apos;,&apos;17731088&apos;,&apos;17731089&apos;,&apos;17731090&apos;,&apos;17731091&apos;,&apos;17731092&apos;,&apos;17731093&apos;,&apos;17731094&apos;,&apos;17731095&apos;,&apos;17731096&apos;,&apos;17731097&apos;,&apos;17731098&apos;,&apos;17731099&apos;,&apos;17731100&apos;,&apos;17731101&apos;,&apos;17731102&apos;,&apos;17731103&apos;,&apos;17731104&apos;,&apos;17731105&apos;,&apos;17731106&apos;,&apos;17731107&apos;,&apos;17731108&apos;,&apos;17731109&apos;,&apos;17731110&apos;,&apos;17731111&apos;,&apos;17731112&apos;,&apos;17731113&apos;,&apos;17731114&apos;,&apos;17731115&apos;,&apos;17731116&apos;,&apos;17731117&apos;,&apos;17731118&apos;,&apos;17731119&apos;,&apos;17731120&apos;,&apos;17731121&apos;,&apos;17731122&apos;,&apos;17731123&apos;,&apos;17731124&apos;,&apos;17731125&apos;,&apos;17731126&apos;,&apos;17731127&apos;,&apos;17731128&apos;,&apos;17731129&apos;,&apos;17731130&apos;,&apos;17731131&apos;,&apos;17731132&apos;,&apos;17731133&apos;,&apos;17731134&apos;,&apos;17731135&apos;,&apos;17731136&apos;,&apos;17731137&apos;,&apos;17731138&apos;,&apos;17731139&apos;,&apos;17731140&apos;,&apos;17731141&apos;,&apos;17731142&apos;,&apos;17731143&apos;,&apos;17731144&apos;,&apos;17731145&apos;,&apos;17731146&apos;,&apos;17731147&apos;,&apos;17731148&apos;,&apos;17731149&apos;,&apos;17731150&apos;,&apos;17731151&apos;,&apos;17731152&apos;,&apos;17731153&apos;,&apos;17731154&apos;,&apos;17731155&apos;,&apos;17731156&apos;,&apos;17731157&apos;,&apos;17731158&apos;,&apos;17731159&apos;,&apos;17731160&apos;,&apos;17731161&apos;,&apos;17731162&apos;,&apos;17731163&apos;,&apos;17731164&apos;,&apos;17731165&apos;,&apos;17731166&apos;,&apos;17731167&apos;,&apos;17731168&apos;,&apos;17731169&apos;,&apos;17731170&apos;,&apos;17731171&apos;,&apos;17731172&apos;,&apos;17731173&apos;,&apos;17731174&apos;,&apos;17731175&apos;&quot;;
vars.put(&quot;scheduleUpd&quot;,scheduleUpdate);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC-GET SCHEDULE_ID" enabled="false">
            <stringProp name="dataSource">dbConnection</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">
SELECT SCHEDULE_ID,STATUS FROM MWING.MTX_EMPLOYEE_SALARY_SCHEDULE where SCHEDULE_ID IN (${scheduleUpd})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">scheduleId,status</stringProp>
            <stringProp name="resultVariable">result</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows">30</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
          </JDBCSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="71001929">${result}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">scheduleId_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="71001929">${result}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">status_1</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC UPDATE SCHEDULE_STATUS" enabled="true">
            <stringProp name="dataSource">dbConnection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">UPDATE MWING.MTX_EMPLOYEE_SALARY_SCHEDULE SET STATUS = &apos;SI&apos;
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">status</stringProp>
            <stringProp name="resultVariable">result</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows">30</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC DELETE  SCHEDULE_ID LOG" enabled="true">
            <stringProp name="dataSource">dbConnection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM MWING.EMPLOYEE_SALARY_LOG 
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">scheduleId,status</stringProp>
            <stringProp name="resultVariable">result</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows">30</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Salary Transfer FC-${count_val}" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Database" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="ScheduleID" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">String scheduleUpdate =&quot;&apos;17731010&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731051&apos;,&apos;17731052&apos;,&apos;17731053&apos;,&apos;17731054&apos;,&apos;17731055&apos;,&apos;17731056&apos;,&apos;17731057&apos;,&apos;17731058&apos;,&apos;17731059&apos;,&apos;17731060&apos;,&apos;17731061&apos;,&apos;17731062&apos;,&apos;17731063&apos;,&apos;17731064&apos;,&apos;17731065&apos;,&apos;17731066&apos;,&apos;17731067&apos;,&apos;17731068&apos;,&apos;17731069&apos;,&apos;17731070&apos;,&apos;17731071&apos;,&apos;17731072&apos;,&apos;17731073&apos;,&apos;17731074&apos;,&apos;17731075&apos;,&apos;17731076&apos;,&apos;17731077&apos;,&apos;17731078&apos;,&apos;17731079&apos;,&apos;17731080&apos;,&apos;17731081&apos;,&apos;17731082&apos;,&apos;17731083&apos;,&apos;17731084&apos;,&apos;17731085&apos;,&apos;17731086&apos;,&apos;17731087&apos;,&apos;17731088&apos;,&apos;17731089&apos;,&apos;17731090&apos;,&apos;17731091&apos;,&apos;17731092&apos;,&apos;17731093&apos;,&apos;17731094&apos;,&apos;17731095&apos;,&apos;17731096&apos;,&apos;17731097&apos;,&apos;17731098&apos;,&apos;17731099&apos;,&apos;17731100&apos;,&apos;17731101&apos;,&apos;17731102&apos;,&apos;17731103&apos;,&apos;17731104&apos;,&apos;17731105&apos;,&apos;17731106&apos;,&apos;17731107&apos;,&apos;17731108&apos;,&apos;17731109&apos;,&apos;17731110&apos;,&apos;17731111&apos;,&apos;17731112&apos;,&apos;17731113&apos;,&apos;17731114&apos;,&apos;17731115&apos;,&apos;17731116&apos;,&apos;17731117&apos;,&apos;17731118&apos;,&apos;17731119&apos;,&apos;17731120&apos;,&apos;17731121&apos;,&apos;17731122&apos;,&apos;17731123&apos;,&apos;17731124&apos;,&apos;17731125&apos;,&apos;17731126&apos;,&apos;17731127&apos;,&apos;17731128&apos;,&apos;17731129&apos;,&apos;17731130&apos;,&apos;17731131&apos;,&apos;17731132&apos;,&apos;17731133&apos;,&apos;17731134&apos;,&apos;17731135&apos;,&apos;17731136&apos;,&apos;17731137&apos;,&apos;17731138&apos;,&apos;17731139&apos;,&apos;17731140&apos;,&apos;17731141&apos;,&apos;17731142&apos;,&apos;17731143&apos;,&apos;17731144&apos;,&apos;17731145&apos;,&apos;17731146&apos;,&apos;17731147&apos;,&apos;17731148&apos;,&apos;17731149&apos;,&apos;17731150&apos;,&apos;17731151&apos;,&apos;17731152&apos;,&apos;17731153&apos;,&apos;17731154&apos;,&apos;17731155&apos;,&apos;17731156&apos;,&apos;17731157&apos;,&apos;17731158&apos;,&apos;17731159&apos;,&apos;17731160&apos;,&apos;17731161&apos;,&apos;17731162&apos;,&apos;17731163&apos;,&apos;17731164&apos;,&apos;17731165&apos;,&apos;17731166&apos;,&apos;17731167&apos;,&apos;17731168&apos;,&apos;17731169&apos;,&apos;17731170&apos;,&apos;17731171&apos;,&apos;17731172&apos;,&apos;17731173&apos;,&apos;17731174&apos;,&apos;17731175&apos;&quot;;
vars.put(&quot;scheduleUpd&quot;,scheduleUpdate);</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC-GET SCHEDULE_ID" enabled="true">
              <stringProp name="dataSource">dbConnection</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">
SELECT SCHEDULE_ID,STATUS FROM MWING.MTX_EMPLOYEE_SALARY_SCHEDULE where SCHEDULE_ID IN (${scheduleUpd})</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">scheduleId,status</stringProp>
              <stringProp name="resultVariable">result</stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows">30</stringProp>
              <stringProp name="resultSetHandler">Store as Object</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="71001929">${result}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">scheduleId_1</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="71001929">${result}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">status_1</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC UPDATE SCHEDULE_STATUS" enabled="true">
              <stringProp name="dataSource">dbConnection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">UPDATE MWING.MTX_EMPLOYEE_SALARY_SCHEDULE SET STATUS = &apos;SI&apos;
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">status</stringProp>
              <stringProp name="resultVariable">result</stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows">30</stringProp>
              <stringProp name="resultSetHandler">Store as Object</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC DELETE  SCHEDULE_ID LOG" enabled="true">
              <stringProp name="dataSource">dbConnection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DELETE FROM MWING.EMPLOYEE_SALARY_LOG 
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">scheduleId,status</stringProp>
              <stringProp name="resultVariable">result</stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows">30</stringProp>
              <stringProp name="resultSetHandler">Store as Object</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Validate Transfer" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">salary_tf_fc.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">String validate =&quot;&lt;TRANSACTION&gt;&quot;+
	&quot;&lt;SERVICETYPE&gt;&quot;+vars.get(&quot;SERVICETYPE&quot;)+&quot;&lt;/SERVICETYPE&gt;&quot;+
	&quot;&lt;USERID&gt;&quot;+vars.get(&quot;USERID&quot;)+&quot;&lt;/USERID&gt;&quot;+
	&quot;&lt;ID&gt;3&lt;/ID&gt;&quot;+
	&quot;&lt;EMPLOYERID&gt;&quot;+vars.get(&quot;EMPLOYERID&quot;)+&quot;&lt;/EMPLOYERID&gt;&quot;+
	&quot;&lt;AMOUNT&gt;&quot;+vars.get(&quot;AMOUNT&quot;)+&quot;&lt;/AMOUNT&gt;&quot;+
	&quot;&lt;CURRENCY&gt;&quot;+vars.get(&quot;CURRENCY&quot;)+&quot;&lt;/CURRENCY&gt;&quot;+
	&quot;&lt;SCHEULEID&gt;&quot;+vars.get(&quot;SCHEULEID&quot;)+&quot;&lt;/SCHEULEID&gt;&quot;+
	&quot;&lt;SMS&gt;Y&lt;/SMS&gt;&quot;+
	&quot;&lt;PAYROLLPLUS&gt;N&lt;/PAYROLLPLUS&gt;&quot;+
	&quot;&lt;INITIATEEWINGID&gt;&quot;+vars.get(&quot;INITIATEEWINGID&quot;)+&quot;&lt;/INITIATEEWINGID&gt;&quot;+
	&quot;&lt;INITIATERWINGID&gt;&quot;+vars.get(&quot;INITIATERWINGID&quot;)+&quot;&lt;/INITIATERWINGID&gt;&quot;+
	&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;payroll&quot;,validate);	</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Validate Salary Transfer-${NO}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MESSAGE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${payroll}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">MESSAGE</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${validate-salary}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="false">
                <stringProp name="XPathExtractor.default"></stringProp>
                <stringProp name="XPathExtractor.refname">TYPE</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/COMMAND</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.whitespace">true</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
                <boolProp name="XPathExtractor.fragment">true</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//COMMAND/STATUS/text()=&apos;200&apos;</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//COMMAND/STATUSMSG/text()=&apos;Successfully.&apos;</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Commite Transfer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">salary_tf_fc.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
	&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
	&quot;&lt;SERVICETYPE&gt;&quot;+vars.get(&quot;SERVICETYPE&quot;)+&quot;&lt;/SERVICETYPE&gt;&quot;+
	&quot;&lt;USERID&gt;&quot;+vars.get(&quot;USERID&quot;)+&quot;&lt;/USERID&gt;&quot;+
	&quot;&lt;EMPLOYERID&gt;&quot;+vars.get(&quot;EMPLOYERID&quot;)+&quot;&lt;/EMPLOYERID&gt;&quot;+
	&quot;&lt;INITIATERWINGID&gt;&quot;+vars.get(&quot;INITIATERWINGID&quot;)+&quot;&lt;/INITIATERWINGID&gt;&quot;+
	&quot;&lt;INITIATEEWINGID&gt;&quot;+vars.get(&quot;INITIATEEWINGID&quot;)+&quot;&lt;/INITIATEEWINGID&gt;&quot;+
	&quot;&lt;AMOUNT&gt;&quot;+vars.get(&quot;AMOUNT&quot;)+&quot;&lt;/AMOUNT&gt;&quot;+
	&quot;&lt;CURRENCY&gt;&quot;+vars.get(&quot;CURRENCY&quot;)+&quot;&lt;/CURRENCY&gt;&quot;+
	&quot;&lt;SCHEULEID&gt;&quot;+vars.get(&quot;SCHEULEID&quot;)+&quot;&lt;/SCHEULEID&gt;&quot;+
	&quot;&lt;SMS&gt;N&lt;/SMS&gt;&quot;+
	&quot;&lt;PAYROLLPLUS&gt;Y&lt;/PAYROLLPLUS&gt;&quot;+	
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;commit_salary&quot;,commit);	</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer ${NO}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MESSAGE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${commit_salary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">MESSAGE</stringProp>
                  </elementProp>
                  <elementProp name="name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${count_val}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">name</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//COMMAND/STATUS/text()=&apos;200&apos;</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//COMMAND/STATUSMSG/text()=&apos;Successfully.&apos;</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Negative Cases" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="USERID" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PPTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;userid&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${userid}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00066&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;User not found !&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EMPLOYER FEILD" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;employer&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${employer}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="false">
                    <stringProp name="XPathExtractor.default"></stringProp>
                    <stringProp name="XPathExtractor.refname">sender</stringProp>
                    <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                    <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                    <boolProp name="XPathExtractor.validate">false</boolProp>
                    <boolProp name="XPathExtractor.tolerant">false</boolProp>
                    <boolProp name="XPathExtractor.namespace">false</boolProp>
                  </XPathExtractor>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00066&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;User not found !&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="INITIATEE FEILD" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;TESTING&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;intitatee&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${intitatee}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                    <stringProp name="XPathExtractor.default"></stringProp>
                    <stringProp name="XPathExtractor.refname">status_msg</stringProp>
                    <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                    <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                    <boolProp name="XPathExtractor.validate">false</boolProp>
                    <boolProp name="XPathExtractor.tolerant">false</boolProp>
                    <boolProp name="XPathExtractor.namespace">false</boolProp>
                  </XPathExtractor>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;ERR010&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;${status_msg}&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="INITIATER FEILD" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;TESTNG&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;intiater&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${intiater}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                    <stringProp name="XPathExtractor.default"></stringProp>
                    <stringProp name="XPathExtractor.refname">smg_initiatter</stringProp>
                    <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                    <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                    <boolProp name="XPathExtractor.validate">false</boolProp>
                    <boolProp name="XPathExtractor.tolerant">false</boolProp>
                    <boolProp name="XPathExtractor.namespace">false</boolProp>
                  </XPathExtractor>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;ERR010&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;${smg_initiatter}&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AMOUNT LESS THAN LIMIT" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;-1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;minust_amount&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${minust_amount}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00905&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;General Error&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AMOUNT NOT ENOUGHT" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;10000000&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;bal_not_enought&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${bal_not_enought}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;000042&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;Not enough balance.&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SCHEULEID" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;TESTING&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;scheule&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${scheule}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;000030&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;General fail exception&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SCHEULEID is DOUPLICATED" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;scheule_douplicated&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${scheule_douplicated}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//COMMAND/STATUS/text()=&apos;E0212&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//COMMAND/STATUSMSG/text()=&apos;General Error&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">count_val</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
          </CounterConfig>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Salary Transfer PS ${count_val}" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Database" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler- ScheduleID" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">String scheduleUpdate = &quot;&apos;17731010&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731051&apos;,&apos;17731052&apos;,&apos;17731053&apos;,&apos;17731054&apos;,&apos;17731055&apos;,&apos;17731056&apos;,&apos;17731057&apos;,&apos;17731058&apos;,&apos;17731059&apos;,&apos;17731060&apos;,&apos;17731061&apos;,&apos;17731062&apos;,&apos;17731063&apos;,&apos;17731064&apos;,&apos;17731065&apos;,&apos;17731066&apos;,&apos;17731067&apos;,&apos;17731068&apos;,&apos;17731069&apos;,&apos;17731070&apos;,&apos;17731071&apos;,&apos;17731072&apos;,&apos;17731073&apos;,&apos;17731074&apos;,&apos;17731075&apos;,&apos;17731076&apos;,&apos;17731077&apos;,&apos;17731078&apos;,&apos;17731079&apos;,&apos;17731080&apos;,&apos;17731081&apos;,&apos;17731082&apos;,&apos;17731083&apos;,&apos;17731084&apos;,&apos;17731085&apos;,&apos;17731086&apos;,&apos;17731087&apos;,&apos;17731088&apos;,&apos;17731089&apos;,&apos;17731090&apos;,&apos;17731091&apos;,&apos;17731092&apos;,&apos;17731093&apos;,&apos;17731094&apos;,&apos;17731095&apos;,&apos;17731096&apos;,&apos;17731097&apos;,&apos;17731098&apos;,&apos;17731099&apos;,&apos;17731100&apos;,&apos;17731101&apos;,&apos;17731102&apos;,&apos;17731103&apos;,&apos;17731104&apos;,&apos;17731105&apos;,&apos;17731106&apos;,&apos;17731107&apos;,&apos;17731108&apos;,&apos;17731109&apos;,&apos;17731110&apos;,&apos;17731111&apos;,&apos;17731112&apos;,&apos;17731113&apos;,&apos;17731114&apos;,&apos;17731115&apos;,&apos;17731116&apos;,&apos;17731117&apos;,&apos;17731118&apos;,&apos;17731119&apos;,&apos;17731120&apos;,&apos;17731121&apos;,&apos;17731122&apos;,&apos;17731123&apos;,&apos;17731124&apos;,&apos;17731125&apos;,&apos;17731126&apos;,&apos;17731127&apos;,&apos;17731128&apos;,&apos;17731129&apos;,&apos;17731130&apos;,&apos;17731131&apos;,&apos;17731132&apos;,&apos;17731133&apos;,&apos;17731134&apos;,&apos;17731135&apos;,&apos;17731136&apos;,&apos;17731137&apos;,&apos;17731138&apos;,&apos;17731139&apos;,&apos;17731140&apos;,&apos;17731141&apos;,&apos;17731142&apos;,&apos;17731143&apos;,&apos;17731144&apos;,&apos;17731145&apos;,&apos;17731146&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731059&apos;,&apos;17731052&apos;,&apos;17731054&apos;,&apos;17731064&apos;,&apos;17731062&apos;,&apos;17731064&apos;,&apos;17731058&apos;,&apos;17731060&apos;,&apos;17731063&apos;,&apos;17731065&apos;,&apos;17731059&apos;&quot;;
vars.put(&quot;scheduleUpd&quot;,scheduleUpdate);</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET SCHEDULE_ID" enabled="false">
              <stringProp name="dataSource">dbConnection</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">
SELECT SCHEDULE_ID,STATUS FROM MWING.MTX_EMPLOYEE_SALARY_SCHEDULE where SCHEDULE_ID IN (${scheduleUpd})</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">scheduleId,status</stringProp>
              <stringProp name="resultVariable">result</stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows">30</stringProp>
              <stringProp name="resultSetHandler">Store as Object</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="71001929">${result}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">scheduleId_1</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="71001929">${result}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">status_1</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC UPDATE SCHEDULE_STATUS" enabled="true">
              <stringProp name="dataSource">dbConnection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">UPDATE MWING.MTX_EMPLOYEE_SALARY_SCHEDULE SET STATUS = &apos;SI&apos;
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">status</stringProp>
              <stringProp name="resultVariable">result</stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows">30</stringProp>
              <stringProp name="resultSetHandler">Store as Object</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC DELETE  SCHEDULE_ID LOG" enabled="true">
              <stringProp name="dataSource">dbConnection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DELETE FROM MWING.EMPLOYEE_SALARY_LOG 
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">scheduleId,status</stringProp>
              <stringProp name="resultVariable">result</stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows">30</stringProp>
              <stringProp name="resultSetHandler">Store as Object</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Validate Transfer " enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">salary_tf_psp.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">String validate =&quot;&lt;TRANSACTION&gt;&quot;+
	&quot;&lt;SERVICETYPE&gt;&quot;+vars.get(&quot;SERVICETYPE&quot;)+&quot;&lt;/SERVICETYPE&gt;&quot;+
	&quot;&lt;USERID&gt;&quot;+vars.get(&quot;USERID&quot;)+&quot;&lt;/USERID&gt;&quot;+
	&quot;&lt;ID&gt;3&lt;/ID&gt;&quot;+
	&quot;&lt;EMPLOYERID&gt;&quot;+vars.get(&quot;EMPLOYERID&quot;)+&quot;&lt;/EMPLOYERID&gt;&quot;+
	&quot;&lt;AMOUNT&gt;&quot;+vars.get(&quot;AMOUNT&quot;)+&quot;&lt;/AMOUNT&gt;&quot;+
	&quot;&lt;CURRENCY&gt;&quot;+vars.get(&quot;CURRENCY&quot;)+&quot;&lt;/CURRENCY&gt;&quot;+
	&quot;&lt;SCHEULEID&gt;&quot;+vars.get(&quot;SCHEULEID&quot;)+&quot;&lt;/SCHEULEID&gt;&quot;+
	&quot;&lt;SMS&gt;Y&lt;/SMS&gt;&quot;+
	&quot;&lt;PAYROLLPLUS&gt;N&lt;/PAYROLLPLUS&gt;&quot;+
	&quot;&lt;INITIATEEWINGID&gt;&quot;+vars.get(&quot;INITIATEEWINGID&quot;)+&quot;&lt;/INITIATEEWINGID&gt;&quot;+
	&quot;&lt;INITIATERWINGID&gt;&quot;+vars.get(&quot;INITIATERWINGID&quot;)+&quot;&lt;/INITIATERWINGID&gt;&quot;+
	&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;payroll&quot;,validate);	</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Validate Salary Transfer PSP-${NO}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MESSAGE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${payroll}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">MESSAGE</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${validate-salary}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="false">
                <stringProp name="XPathExtractor.default"></stringProp>
                <stringProp name="XPathExtractor.refname">TYPE</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/COMMAND</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.whitespace">true</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
                <boolProp name="XPathExtractor.fragment">true</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//COMMAND/STATUS/text()=&apos;200&apos;</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//COMMAND/STATUSMSG/text()=&apos;Successfully.&apos;</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Commite Transfer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Database" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler- ScheduleID" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String scheduleUpdate = &quot;&apos;17731010&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731051&apos;,&apos;17731052&apos;,&apos;17731053&apos;,&apos;17731054&apos;,&apos;17731055&apos;,&apos;17731056&apos;,&apos;17731057&apos;,&apos;17731058&apos;,&apos;17731059&apos;,&apos;17731060&apos;,&apos;17731061&apos;,&apos;17731062&apos;,&apos;17731063&apos;,&apos;17731064&apos;,&apos;17731065&apos;,&apos;17731066&apos;,&apos;17731067&apos;,&apos;17731068&apos;,&apos;17731069&apos;,&apos;17731070&apos;,&apos;17731071&apos;,&apos;17731072&apos;,&apos;17731073&apos;,&apos;17731074&apos;,&apos;17731075&apos;,&apos;17731076&apos;,&apos;17731077&apos;,&apos;17731078&apos;,&apos;17731079&apos;,&apos;17731080&apos;,&apos;17731081&apos;,&apos;17731082&apos;,&apos;17731083&apos;,&apos;17731084&apos;,&apos;17731085&apos;,&apos;17731086&apos;,&apos;17731087&apos;,&apos;17731088&apos;,&apos;17731089&apos;,&apos;17731090&apos;,&apos;17731091&apos;,&apos;17731092&apos;,&apos;17731093&apos;,&apos;17731094&apos;,&apos;17731095&apos;,&apos;17731096&apos;,&apos;17731097&apos;,&apos;17731098&apos;,&apos;17731099&apos;,&apos;17731100&apos;,&apos;17731101&apos;,&apos;17731102&apos;,&apos;17731103&apos;,&apos;17731104&apos;,&apos;17731105&apos;,&apos;17731106&apos;,&apos;17731107&apos;,&apos;17731108&apos;,&apos;17731109&apos;,&apos;17731110&apos;,&apos;17731111&apos;,&apos;17731112&apos;,&apos;17731113&apos;,&apos;17731114&apos;,&apos;17731115&apos;,&apos;17731116&apos;,&apos;17731117&apos;,&apos;17731118&apos;,&apos;17731119&apos;,&apos;17731120&apos;,&apos;17731121&apos;,&apos;17731122&apos;,&apos;17731123&apos;,&apos;17731124&apos;,&apos;17731125&apos;,&apos;17731126&apos;,&apos;17731127&apos;,&apos;17731128&apos;,&apos;17731129&apos;,&apos;17731130&apos;,&apos;17731131&apos;,&apos;17731132&apos;,&apos;17731133&apos;,&apos;17731134&apos;,&apos;17731135&apos;,&apos;17731136&apos;,&apos;17731137&apos;,&apos;17731138&apos;,&apos;17731139&apos;,&apos;17731140&apos;,&apos;17731141&apos;,&apos;17731142&apos;,&apos;17731143&apos;,&apos;17731144&apos;,&apos;17731145&apos;,&apos;17731146&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731059&apos;,&apos;17731052&apos;,&apos;17731054&apos;,&apos;17731064&apos;,&apos;17731062&apos;,&apos;17731064&apos;,&apos;17731058&apos;,&apos;17731060&apos;,&apos;17731063&apos;,&apos;17731065&apos;,&apos;17731059&apos;&quot;;
vars.put(&quot;scheduleUpd&quot;,scheduleUpdate);</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET SCHEDULE_ID" enabled="true">
                <stringProp name="dataSource">dbConnection</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">
SELECT SCHEDULE_ID,STATUS FROM MWING.MTX_EMPLOYEE_SALARY_SCHEDULE where SCHEDULE_ID IN (${scheduleUpd})

--in(&apos;17731010&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731051&apos;,&apos;17731052&apos;,&apos;17731053&apos;,&apos;17731054&apos;,&apos;17731055&apos;,&apos;17731056&apos;,&apos;17731057&apos;,&apos;17731058&apos;,&apos;17731059&apos;,&apos;17731060&apos;,&apos;17731061&apos;,&apos;17731062&apos;,&apos;17731063&apos;,&apos;17731064&apos;,&apos;17731065&apos;,&apos;17731066&apos;,&apos;17731067&apos;,&apos;17731068&apos;,&apos;17731069&apos;,&apos;17731070&apos;,&apos;17731071&apos;,&apos;17731072&apos;,&apos;17731073&apos;,&apos;17731074&apos;,&apos;17731075&apos;,&apos;17731076&apos;,&apos;17731077&apos;,&apos;17731078&apos;,&apos;17731079&apos;,&apos;17731080&apos;,&apos;17731081&apos;,&apos;17731082&apos;,&apos;17731083&apos;,&apos;17731084&apos;,&apos;17731085&apos;,&apos;17731086&apos;,&apos;17731087&apos;,&apos;17731088&apos;,&apos;17731089&apos;,&apos;17731090&apos;,&apos;17731091&apos;,&apos;17731092&apos;,&apos;17731093&apos;,&apos;17731094&apos;,&apos;17731095&apos;,&apos;17731096&apos;,&apos;17731097&apos;,&apos;17731098&apos;,&apos;17731099&apos;,&apos;17731100&apos;,&apos;17731101&apos;,&apos;17731102&apos;,&apos;17731103&apos;,&apos;17731104&apos;,&apos;17731105&apos;,&apos;17731106&apos;,&apos;17731107&apos;,&apos;17731108&apos;,&apos;17731109&apos;,&apos;17731110&apos;,&apos;17731111&apos;,&apos;17731112&apos;,&apos;17731113&apos;,&apos;17731114&apos;,&apos;17731115&apos;,&apos;17731116&apos;,&apos;17731117&apos;,&apos;17731118&apos;,&apos;17731119&apos;,&apos;17731120&apos;,&apos;17731121&apos;,&apos;17731122&apos;,&apos;17731123&apos;,&apos;17731124&apos;,&apos;17731125&apos;,&apos;17731126&apos;,&apos;17731127&apos;,&apos;17731128&apos;,&apos;17731129&apos;,&apos;17731130&apos;,&apos;17731131&apos;,&apos;17731132&apos;,&apos;17731133&apos;,&apos;17731134&apos;,&apos;17731135&apos;,&apos;17731136&apos;,&apos;17731137&apos;,&apos;17731138&apos;,&apos;17731139&apos;,&apos;17731140&apos;,&apos;17731141&apos;,&apos;17731142&apos;,&apos;17731143&apos;,&apos;17731144&apos;,&apos;17731145&apos;,&apos;17731146&apos;
--    )</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">scheduleId,status</stringProp>
                <stringProp name="resultVariable">result</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows">30</stringProp>
                <stringProp name="resultSetHandler">Store as Object</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="71001929">${result}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">scheduleId_1</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="71001929">${result}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">status_1</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC UPDATE SCHEDULE_STATUS" enabled="true">
                <stringProp name="dataSource">dbConnection</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">UPDATE MWING.MTX_EMPLOYEE_SALARY_SCHEDULE SET STATUS = &apos;SI&apos;
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">status</stringProp>
                <stringProp name="resultVariable">result</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows">30</stringProp>
                <stringProp name="resultSetHandler">Store as Object</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC DELETE  SCHEDULE_ID LOG" enabled="true">
                <stringProp name="dataSource">dbConnection</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DELETE FROM MWING.EMPLOYEE_SALARY_LOG 
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">scheduleId,status</stringProp>
                <stringProp name="resultVariable">result</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows">30</stringProp>
                <stringProp name="resultSetHandler">Store as Object</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">salary_tf_psp.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
	&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
	&quot;&lt;SERVICETYPE&gt;&quot;+vars.get(&quot;SERVICETYPE&quot;)+&quot;&lt;/SERVICETYPE&gt;&quot;+
	&quot;&lt;USERID&gt;&quot;+vars.get(&quot;USERID&quot;)+&quot;&lt;/USERID&gt;&quot;+
	&quot;&lt;EMPLOYERID&gt;&quot;+vars.get(&quot;EMPLOYERID&quot;)+&quot;&lt;/EMPLOYERID&gt;&quot;+
	&quot;&lt;INITIATERWINGID&gt;&quot;+vars.get(&quot;INITIATERWINGID&quot;)+&quot;&lt;/INITIATERWINGID&gt;&quot;+
	&quot;&lt;INITIATEEWINGID&gt;&quot;+vars.get(&quot;INITIATEEWINGID&quot;)+&quot;&lt;/INITIATEEWINGID&gt;&quot;+
	&quot;&lt;AMOUNT&gt;&quot;+vars.get(&quot;AMOUNT&quot;)+&quot;&lt;/AMOUNT&gt;&quot;+
	&quot;&lt;CURRENCY&gt;&quot;+vars.get(&quot;CURRENCY&quot;)+&quot;&lt;/CURRENCY&gt;&quot;+
	&quot;&lt;SCHEULEID&gt;&quot;+vars.get(&quot;SCHEULEID&quot;)+&quot;&lt;/SCHEULEID&gt;&quot;+
	&quot;&lt;SMS&gt;N&lt;/SMS&gt;&quot;+
	&quot;&lt;PAYROLLPLUS&gt;Y&lt;/PAYROLLPLUS&gt;&quot;+	
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;commit_salary&quot;,commit);	</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PS ${NO}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MESSAGE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${commit_salary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">MESSAGE</stringProp>
                  </elementProp>
                  <elementProp name="name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${count_val}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">name</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;200&apos;</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;Successfully.&apos;</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">true</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
                <stringProp name="Scope.variable">TYPE</stringProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Negative Cases" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="USERID" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PPTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;userid&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${userid}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00066&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;User not found !&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EMPLOYER FEILD" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;employer&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${employer}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="false">
                    <stringProp name="XPathExtractor.default"></stringProp>
                    <stringProp name="XPathExtractor.refname">sender</stringProp>
                    <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                    <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                    <boolProp name="XPathExtractor.validate">false</boolProp>
                    <boolProp name="XPathExtractor.tolerant">false</boolProp>
                    <boolProp name="XPathExtractor.namespace">false</boolProp>
                  </XPathExtractor>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00066&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;User not found !&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="INITIATEE FEILD" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;TESTING&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;intitatee&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${intitatee}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                    <stringProp name="XPathExtractor.default"></stringProp>
                    <stringProp name="XPathExtractor.refname">status_msg</stringProp>
                    <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                    <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                    <boolProp name="XPathExtractor.validate">false</boolProp>
                    <boolProp name="XPathExtractor.tolerant">false</boolProp>
                    <boolProp name="XPathExtractor.namespace">false</boolProp>
                  </XPathExtractor>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;ERR010&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;${status_msg}&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="INITIATER FEILD" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;TESTNG&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;intiater&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${intiater}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                    <stringProp name="XPathExtractor.default"></stringProp>
                    <stringProp name="XPathExtractor.refname">smg_initiatter</stringProp>
                    <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                    <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                    <boolProp name="XPathExtractor.validate">false</boolProp>
                    <boolProp name="XPathExtractor.tolerant">false</boolProp>
                    <boolProp name="XPathExtractor.namespace">false</boolProp>
                  </XPathExtractor>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;ERR010&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;${smg_initiatter}&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AMOUNT LESS THAN LIMIT" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;-1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;minust_amount&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${minust_amount}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00905&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;General Error&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AMOUNT NOT ENOUGHT" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;10000000&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;bal_not_enought&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${bal_not_enought}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;000042&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;Not enough balance.&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SCHEULEID" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;TESTING&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;scheule&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${scheule}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;000030&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;General fail exception&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SCHEULEID is DOUPLICATED" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;scheule_douplicated&quot;,commit);	</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="MESSAGE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${scheule_douplicated}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MESSAGE</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//COMMAND/STATUS/text()=&apos;E0212&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//COMMAND/STATUSMSG/text()=&apos;General Error&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">true</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                    <stringProp name="Scope.variable">TYPE</stringProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">count_val</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
          </CounterConfig>
          <hashTree/>
        </hashTree>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="bzm - Concurrency -Performance Testing" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">1</stringProp>
        <stringProp name="RampUp">1</stringProp>
        <stringProp name="Steps">1</stringProp>
        <stringProp name="Hold">3</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">S</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="All Notification" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Notification To Customer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">notification_to_customer.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sent Notification To Customer" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;wing_account&quot;: &quot;${wing_account}&quot;,&#xd;
    &quot;sms_content&quot;: &quot;${payroll} \nAmt: USD ${amount}\nTID : ${txn_id}&quot;,&#xd;
    &quot;txn_id&quot;: &quot;${txn_id}&quot;,&#xd;
    &quot;service_type&quot;: &quot;PAYROLL&quot;,&#xd;
    &quot;notification_type&quot;: &quot;PAYEE&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/notification-engine/v1/api/customer/notification/sent</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2022-08-10T15:39:50.6704937</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2022-08-10T15:39:50.6704937</stringProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- code" enabled="true">
                <stringProp name="JSON_PATH">$.code</stringProp>
                <stringProp name="EXPECTED_VALUE">SUCCESS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- message" enabled="true">
                <stringProp name="JSON_PATH">$.message</stringProp>
                <stringProp name="EXPECTED_VALUE">Successfully</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Sent Notification To retailer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">notification_to_retailer.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames"></stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.thread</stringProp>
            </CSVDataSet>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sent Notification To retailer" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;wing_account&quot;: &quot;077678901&quot;,&#xd;
    &quot;sms_content&quot;: &quot;Success cashout\nAmt: USD 20.00\nTID : abcdaef12345&quot;,&#xd;
    &quot;txn_id&quot;: &quot;abcdABCef123a4511&quot;,&#xd;
    &quot;service_type&quot;: &quot;PAYROLE&quot;,&#xd;
    &quot;notification_type&quot;: &quot;PAYEE&quot;,&#xd;
    &quot;url&quot;: &quot;${url}&quot;,&#xd;
    &quot;type&quot;: &quot;${type}&quot;,&#xd;
    &quot;addl_data&quot;: [&#xd;
        {&#xd;
            &quot;field_name&quot;: &quot;ACCOUNT_NO&quot;,&#xd;
            &quot;value&quot;: &quot;${account_no}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;field_name&quot;: &quot;EXPIRE_DATE&quot;,&#xd;
            &quot;value&quot;: &quot;${expired_date}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;field_name&quot;: &quot;SUB_ID&quot;,&#xd;
            &quot;value&quot;: &quot;${sub_id}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;field_name&quot;: &quot;SUB_PK_CCY&quot;,&#xd;
            &quot;value&quot;: &quot;${sub_pk_ccy}&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/notification-engine/v1/api/retailer/notification/sent</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2022-08-11T13:05:09.707087</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2022-08-11T13:05:09.707087</stringProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- code" enabled="true">
                <stringProp name="JSON_PATH">$.code</stringProp>
                <stringProp name="EXPECTED_VALUE">SUCCESS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- message" enabled="true">
                <stringProp name="JSON_PATH">$.message</stringProp>
                <stringProp name="EXPECTED_VALUE">Successfully</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Sent Notification To WCX EKYC" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Sent Notification To WCX EKYC" enabled="true"/>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">notification_to_wcx_ekyc.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sent Notification To WCX EKYC" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;wing_account&quot;: &quot;${wing_account}&quot;,&#xd;
    &quot;sms_content&quot;: &quot;${payroll} \nAmt: USD ${amount}\nTID : ${txn_id}&quot;,&#xd;
    &quot;txn_id&quot;: &quot;${txn_id}&quot;,&#xd;
    &quot;service_type&quot;: &quot;PAYROLL&quot;,&#xd;
    &quot;notification_type&quot;: &quot;PAYEE&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">uat-gateway.wingmoney.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/notification-engine/v1/api/notification/sent</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2022-08-11T13:45:29.0428796</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Created from cURL on 2022-08-11T13:45:29.0428796</stringProp>
                </HeaderManager>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- code" enabled="true">
                  <stringProp name="JSON_PATH">$.code</stringProp>
                  <stringProp name="EXPECTED_VALUE">SUCCESS</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion- message" enabled="true">
                  <stringProp name="JSON_PATH">$.message</stringProp>
                  <stringProp name="EXPECTED_VALUE">Successfully</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SALARY TRANSFER" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Salary Transfer PS" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Database" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler- ScheduleID" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String scheduleUpdate = &quot;&apos;17731010&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731051&apos;,&apos;17731052&apos;,&apos;17731053&apos;,&apos;17731054&apos;,&apos;17731055&apos;,&apos;17731056&apos;,&apos;17731057&apos;,&apos;17731058&apos;,&apos;17731059&apos;,&apos;17731060&apos;,&apos;17731061&apos;,&apos;17731062&apos;,&apos;17731063&apos;,&apos;17731064&apos;,&apos;17731065&apos;,&apos;17731066&apos;,&apos;17731067&apos;,&apos;17731068&apos;,&apos;17731069&apos;,&apos;17731070&apos;,&apos;17731071&apos;,&apos;17731072&apos;,&apos;17731073&apos;,&apos;17731074&apos;,&apos;17731075&apos;,&apos;17731076&apos;,&apos;17731077&apos;,&apos;17731078&apos;,&apos;17731079&apos;,&apos;17731080&apos;,&apos;17731081&apos;,&apos;17731082&apos;,&apos;17731083&apos;,&apos;17731084&apos;,&apos;17731085&apos;,&apos;17731086&apos;,&apos;17731087&apos;,&apos;17731088&apos;,&apos;17731089&apos;,&apos;17731090&apos;,&apos;17731091&apos;,&apos;17731092&apos;,&apos;17731093&apos;,&apos;17731094&apos;,&apos;17731095&apos;,&apos;17731096&apos;,&apos;17731097&apos;,&apos;17731098&apos;,&apos;17731099&apos;,&apos;17731100&apos;,&apos;17731101&apos;,&apos;17731102&apos;,&apos;17731103&apos;,&apos;17731104&apos;,&apos;17731105&apos;,&apos;17731106&apos;,&apos;17731107&apos;,&apos;17731108&apos;,&apos;17731109&apos;,&apos;17731110&apos;,&apos;17731111&apos;,&apos;17731112&apos;,&apos;17731113&apos;,&apos;17731114&apos;,&apos;17731115&apos;,&apos;17731116&apos;,&apos;17731117&apos;,&apos;17731118&apos;,&apos;17731119&apos;,&apos;17731120&apos;,&apos;17731121&apos;,&apos;17731122&apos;,&apos;17731123&apos;,&apos;17731124&apos;,&apos;17731125&apos;,&apos;17731126&apos;,&apos;17731127&apos;,&apos;17731128&apos;,&apos;17731129&apos;,&apos;17731130&apos;,&apos;17731131&apos;,&apos;17731132&apos;,&apos;17731133&apos;,&apos;17731134&apos;,&apos;17731135&apos;,&apos;17731136&apos;,&apos;17731137&apos;,&apos;17731138&apos;,&apos;17731139&apos;,&apos;17731140&apos;,&apos;17731141&apos;,&apos;17731142&apos;,&apos;17731143&apos;,&apos;17731144&apos;,&apos;17731145&apos;,&apos;17731146&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731059&apos;,&apos;17731052&apos;,&apos;17731054&apos;,&apos;17731064&apos;,&apos;17731062&apos;,&apos;17731064&apos;,&apos;17731058&apos;,&apos;17731060&apos;,&apos;17731063&apos;,&apos;17731065&apos;,&apos;17731059&apos;&quot;;
vars.put(&quot;scheduleUpd&quot;,scheduleUpdate);</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET SCHEDULE_ID" enabled="true">
                <stringProp name="dataSource">dbConnection</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">
SELECT SCHEDULE_ID,STATUS FROM MWING.MTX_EMPLOYEE_SALARY_SCHEDULE where SCHEDULE_ID IN (${scheduleUpd})

--in(&apos;17731010&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731051&apos;,&apos;17731052&apos;,&apos;17731053&apos;,&apos;17731054&apos;,&apos;17731055&apos;,&apos;17731056&apos;,&apos;17731057&apos;,&apos;17731058&apos;,&apos;17731059&apos;,&apos;17731060&apos;,&apos;17731061&apos;,&apos;17731062&apos;,&apos;17731063&apos;,&apos;17731064&apos;,&apos;17731065&apos;,&apos;17731066&apos;,&apos;17731067&apos;,&apos;17731068&apos;,&apos;17731069&apos;,&apos;17731070&apos;,&apos;17731071&apos;,&apos;17731072&apos;,&apos;17731073&apos;,&apos;17731074&apos;,&apos;17731075&apos;,&apos;17731076&apos;,&apos;17731077&apos;,&apos;17731078&apos;,&apos;17731079&apos;,&apos;17731080&apos;,&apos;17731081&apos;,&apos;17731082&apos;,&apos;17731083&apos;,&apos;17731084&apos;,&apos;17731085&apos;,&apos;17731086&apos;,&apos;17731087&apos;,&apos;17731088&apos;,&apos;17731089&apos;,&apos;17731090&apos;,&apos;17731091&apos;,&apos;17731092&apos;,&apos;17731093&apos;,&apos;17731094&apos;,&apos;17731095&apos;,&apos;17731096&apos;,&apos;17731097&apos;,&apos;17731098&apos;,&apos;17731099&apos;,&apos;17731100&apos;,&apos;17731101&apos;,&apos;17731102&apos;,&apos;17731103&apos;,&apos;17731104&apos;,&apos;17731105&apos;,&apos;17731106&apos;,&apos;17731107&apos;,&apos;17731108&apos;,&apos;17731109&apos;,&apos;17731110&apos;,&apos;17731111&apos;,&apos;17731112&apos;,&apos;17731113&apos;,&apos;17731114&apos;,&apos;17731115&apos;,&apos;17731116&apos;,&apos;17731117&apos;,&apos;17731118&apos;,&apos;17731119&apos;,&apos;17731120&apos;,&apos;17731121&apos;,&apos;17731122&apos;,&apos;17731123&apos;,&apos;17731124&apos;,&apos;17731125&apos;,&apos;17731126&apos;,&apos;17731127&apos;,&apos;17731128&apos;,&apos;17731129&apos;,&apos;17731130&apos;,&apos;17731131&apos;,&apos;17731132&apos;,&apos;17731133&apos;,&apos;17731134&apos;,&apos;17731135&apos;,&apos;17731136&apos;,&apos;17731137&apos;,&apos;17731138&apos;,&apos;17731139&apos;,&apos;17731140&apos;,&apos;17731141&apos;,&apos;17731142&apos;,&apos;17731143&apos;,&apos;17731144&apos;,&apos;17731145&apos;,&apos;17731146&apos;
--    )</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">scheduleId,status</stringProp>
                <stringProp name="resultVariable">result</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows">30</stringProp>
                <stringProp name="resultSetHandler">Store as Object</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="71001929">${result}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">scheduleId_1</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="71001929">${result}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">status_1</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC UPDATE SCHEDULE_STATUS" enabled="true">
                <stringProp name="dataSource">dbConnection</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">UPDATE MWING.MTX_EMPLOYEE_SALARY_SCHEDULE SET STATUS = &apos;SI&apos;
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">status</stringProp>
                <stringProp name="resultVariable">result</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows">30</stringProp>
                <stringProp name="resultSetHandler">Store as Object</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC DELETE  SCHEDULE_ID LOG" enabled="true">
                <stringProp name="dataSource">dbConnection</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DELETE FROM MWING.EMPLOYEE_SALARY_LOG 
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">scheduleId,status</stringProp>
                <stringProp name="resultVariable">result</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows">30</stringProp>
                <stringProp name="resultSetHandler">Store as Object</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Validate Transfer " enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">salary_tf_psp.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.group</stringProp>
              </CSVDataSet>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String validate =&quot;&lt;TRANSACTION&gt;&quot;+
	&quot;&lt;SERVICETYPE&gt;&quot;+vars.get(&quot;SERVICETYPE&quot;)+&quot;&lt;/SERVICETYPE&gt;&quot;+
	&quot;&lt;USERID&gt;&quot;+vars.get(&quot;USERID&quot;)+&quot;&lt;/USERID&gt;&quot;+
	&quot;&lt;ID&gt;3&lt;/ID&gt;&quot;+
	&quot;&lt;EMPLOYERID&gt;&quot;+vars.get(&quot;EMPLOYERID&quot;)+&quot;&lt;/EMPLOYERID&gt;&quot;+
	&quot;&lt;AMOUNT&gt;&quot;+vars.get(&quot;AMOUNT&quot;)+&quot;&lt;/AMOUNT&gt;&quot;+
	&quot;&lt;CURRENCY&gt;&quot;+vars.get(&quot;CURRENCY&quot;)+&quot;&lt;/CURRENCY&gt;&quot;+
	&quot;&lt;SCHEULEID&gt;&quot;+vars.get(&quot;SCHEULEID&quot;)+&quot;&lt;/SCHEULEID&gt;&quot;+
	&quot;&lt;SMS&gt;Y&lt;/SMS&gt;&quot;+
	&quot;&lt;PAYROLLPLUS&gt;N&lt;/PAYROLLPLUS&gt;&quot;+
	&quot;&lt;INITIATEEWINGID&gt;&quot;+vars.get(&quot;INITIATEEWINGID&quot;)+&quot;&lt;/INITIATEEWINGID&gt;&quot;+
	&quot;&lt;INITIATERWINGID&gt;&quot;+vars.get(&quot;INITIATERWINGID&quot;)+&quot;&lt;/INITIATERWINGID&gt;&quot;+
	&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;payroll&quot;,validate);	</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Validate Salary Transfer PSP-${NO}" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MESSAGE" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${payroll}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">MESSAGE</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${validate-salary}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="false">
                  <stringProp name="XPathExtractor.default"></stringProp>
                  <stringProp name="XPathExtractor.refname">TYPE</stringProp>
                  <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                  <stringProp name="XPathExtractor.xpathQuery">/COMMAND</stringProp>
                  <boolProp name="XPathExtractor.validate">false</boolProp>
                  <boolProp name="XPathExtractor.tolerant">false</boolProp>
                  <boolProp name="XPathExtractor.namespace">false</boolProp>
                  <boolProp name="XPathExtractor.whitespace">true</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                  <boolProp name="XPathExtractor.fragment">true</boolProp>
                </XPathExtractor>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//COMMAND/STATUS/text()=&apos;200&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//COMMAND/STATUSMSG/text()=&apos;Successfully.&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Commite Transfer" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Database" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler- ScheduleID" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String scheduleUpdate = &quot;&apos;17731010&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731051&apos;,&apos;17731052&apos;,&apos;17731053&apos;,&apos;17731054&apos;,&apos;17731055&apos;,&apos;17731056&apos;,&apos;17731057&apos;,&apos;17731058&apos;,&apos;17731059&apos;,&apos;17731060&apos;,&apos;17731061&apos;,&apos;17731062&apos;,&apos;17731063&apos;,&apos;17731064&apos;,&apos;17731065&apos;,&apos;17731066&apos;,&apos;17731067&apos;,&apos;17731068&apos;,&apos;17731069&apos;,&apos;17731070&apos;,&apos;17731071&apos;,&apos;17731072&apos;,&apos;17731073&apos;,&apos;17731074&apos;,&apos;17731075&apos;,&apos;17731076&apos;,&apos;17731077&apos;,&apos;17731078&apos;,&apos;17731079&apos;,&apos;17731080&apos;,&apos;17731081&apos;,&apos;17731082&apos;,&apos;17731083&apos;,&apos;17731084&apos;,&apos;17731085&apos;,&apos;17731086&apos;,&apos;17731087&apos;,&apos;17731088&apos;,&apos;17731089&apos;,&apos;17731090&apos;,&apos;17731091&apos;,&apos;17731092&apos;,&apos;17731093&apos;,&apos;17731094&apos;,&apos;17731095&apos;,&apos;17731096&apos;,&apos;17731097&apos;,&apos;17731098&apos;,&apos;17731099&apos;,&apos;17731100&apos;,&apos;17731101&apos;,&apos;17731102&apos;,&apos;17731103&apos;,&apos;17731104&apos;,&apos;17731105&apos;,&apos;17731106&apos;,&apos;17731107&apos;,&apos;17731108&apos;,&apos;17731109&apos;,&apos;17731110&apos;,&apos;17731111&apos;,&apos;17731112&apos;,&apos;17731113&apos;,&apos;17731114&apos;,&apos;17731115&apos;,&apos;17731116&apos;,&apos;17731117&apos;,&apos;17731118&apos;,&apos;17731119&apos;,&apos;17731120&apos;,&apos;17731121&apos;,&apos;17731122&apos;,&apos;17731123&apos;,&apos;17731124&apos;,&apos;17731125&apos;,&apos;17731126&apos;,&apos;17731127&apos;,&apos;17731128&apos;,&apos;17731129&apos;,&apos;17731130&apos;,&apos;17731131&apos;,&apos;17731132&apos;,&apos;17731133&apos;,&apos;17731134&apos;,&apos;17731135&apos;,&apos;17731136&apos;,&apos;17731137&apos;,&apos;17731138&apos;,&apos;17731139&apos;,&apos;17731140&apos;,&apos;17731141&apos;,&apos;17731142&apos;,&apos;17731143&apos;,&apos;17731144&apos;,&apos;17731145&apos;,&apos;17731146&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731059&apos;,&apos;17731052&apos;,&apos;17731054&apos;,&apos;17731064&apos;,&apos;17731062&apos;,&apos;17731064&apos;,&apos;17731058&apos;,&apos;17731060&apos;,&apos;17731063&apos;,&apos;17731065&apos;,&apos;17731059&apos;&quot;;
vars.put(&quot;scheduleUpd&quot;,scheduleUpdate);</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET SCHEDULE_ID" enabled="true">
                  <stringProp name="dataSource">dbConnection</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">
SELECT SCHEDULE_ID,STATUS FROM MWING.MTX_EMPLOYEE_SALARY_SCHEDULE where SCHEDULE_ID IN (${scheduleUpd})

--in(&apos;17731010&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731051&apos;,&apos;17731052&apos;,&apos;17731053&apos;,&apos;17731054&apos;,&apos;17731055&apos;,&apos;17731056&apos;,&apos;17731057&apos;,&apos;17731058&apos;,&apos;17731059&apos;,&apos;17731060&apos;,&apos;17731061&apos;,&apos;17731062&apos;,&apos;17731063&apos;,&apos;17731064&apos;,&apos;17731065&apos;,&apos;17731066&apos;,&apos;17731067&apos;,&apos;17731068&apos;,&apos;17731069&apos;,&apos;17731070&apos;,&apos;17731071&apos;,&apos;17731072&apos;,&apos;17731073&apos;,&apos;17731074&apos;,&apos;17731075&apos;,&apos;17731076&apos;,&apos;17731077&apos;,&apos;17731078&apos;,&apos;17731079&apos;,&apos;17731080&apos;,&apos;17731081&apos;,&apos;17731082&apos;,&apos;17731083&apos;,&apos;17731084&apos;,&apos;17731085&apos;,&apos;17731086&apos;,&apos;17731087&apos;,&apos;17731088&apos;,&apos;17731089&apos;,&apos;17731090&apos;,&apos;17731091&apos;,&apos;17731092&apos;,&apos;17731093&apos;,&apos;17731094&apos;,&apos;17731095&apos;,&apos;17731096&apos;,&apos;17731097&apos;,&apos;17731098&apos;,&apos;17731099&apos;,&apos;17731100&apos;,&apos;17731101&apos;,&apos;17731102&apos;,&apos;17731103&apos;,&apos;17731104&apos;,&apos;17731105&apos;,&apos;17731106&apos;,&apos;17731107&apos;,&apos;17731108&apos;,&apos;17731109&apos;,&apos;17731110&apos;,&apos;17731111&apos;,&apos;17731112&apos;,&apos;17731113&apos;,&apos;17731114&apos;,&apos;17731115&apos;,&apos;17731116&apos;,&apos;17731117&apos;,&apos;17731118&apos;,&apos;17731119&apos;,&apos;17731120&apos;,&apos;17731121&apos;,&apos;17731122&apos;,&apos;17731123&apos;,&apos;17731124&apos;,&apos;17731125&apos;,&apos;17731126&apos;,&apos;17731127&apos;,&apos;17731128&apos;,&apos;17731129&apos;,&apos;17731130&apos;,&apos;17731131&apos;,&apos;17731132&apos;,&apos;17731133&apos;,&apos;17731134&apos;,&apos;17731135&apos;,&apos;17731136&apos;,&apos;17731137&apos;,&apos;17731138&apos;,&apos;17731139&apos;,&apos;17731140&apos;,&apos;17731141&apos;,&apos;17731142&apos;,&apos;17731143&apos;,&apos;17731144&apos;,&apos;17731145&apos;,&apos;17731146&apos;
--    )</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">scheduleId,status</stringProp>
                  <stringProp name="resultVariable">result</stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows">30</stringProp>
                  <stringProp name="resultSetHandler">Store as Object</stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="71001929">${result}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.scope">variable</stringProp>
                    <stringProp name="Scope.variable">scheduleId_1</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="71001929">${result}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.scope">variable</stringProp>
                    <stringProp name="Scope.variable">status_1</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC UPDATE SCHEDULE_STATUS" enabled="true">
                  <stringProp name="dataSource">dbConnection</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">UPDATE MWING.MTX_EMPLOYEE_SALARY_SCHEDULE SET STATUS = &apos;SI&apos;
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">status</stringProp>
                  <stringProp name="resultVariable">result</stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows">30</stringProp>
                  <stringProp name="resultSetHandler">Store as Object</stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC DELETE  SCHEDULE_ID LOG" enabled="true">
                  <stringProp name="dataSource">dbConnection</stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="query">DELETE FROM MWING.EMPLOYEE_SALARY_LOG 
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">scheduleId,status</stringProp>
                  <stringProp name="resultVariable">result</stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows">30</stringProp>
                  <stringProp name="resultSetHandler">Store as Object</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">salary_tf_psp.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
	&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
	&quot;&lt;SERVICETYPE&gt;&quot;+vars.get(&quot;SERVICETYPE&quot;)+&quot;&lt;/SERVICETYPE&gt;&quot;+
	&quot;&lt;USERID&gt;&quot;+vars.get(&quot;USERID&quot;)+&quot;&lt;/USERID&gt;&quot;+
	&quot;&lt;EMPLOYERID&gt;&quot;+vars.get(&quot;EMPLOYERID&quot;)+&quot;&lt;/EMPLOYERID&gt;&quot;+
	&quot;&lt;INITIATERWINGID&gt;&quot;+vars.get(&quot;INITIATERWINGID&quot;)+&quot;&lt;/INITIATERWINGID&gt;&quot;+
	&quot;&lt;INITIATEEWINGID&gt;&quot;+vars.get(&quot;INITIATEEWINGID&quot;)+&quot;&lt;/INITIATEEWINGID&gt;&quot;+
	&quot;&lt;AMOUNT&gt;&quot;+vars.get(&quot;AMOUNT&quot;)+&quot;&lt;/AMOUNT&gt;&quot;+
	&quot;&lt;CURRENCY&gt;&quot;+vars.get(&quot;CURRENCY&quot;)+&quot;&lt;/CURRENCY&gt;&quot;+
	&quot;&lt;SCHEULEID&gt;&quot;+vars.get(&quot;SCHEULEID&quot;)+&quot;&lt;/SCHEULEID&gt;&quot;+
	&quot;&lt;SMS&gt;N&lt;/SMS&gt;&quot;+
	&quot;&lt;PAYROLLPLUS&gt;Y&lt;/PAYROLLPLUS&gt;&quot;+	
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;commit_salary&quot;,commit);	</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PS ${NO}" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MESSAGE" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${commit_salary}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">MESSAGE</stringProp>
                    </elementProp>
                    <elementProp name="name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${count_val}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">/COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;200&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;Successfully.&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Negative Cases" enabled="false">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="USERID" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PPTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;userid&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${userid}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00066&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;User not found !&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EMPLOYER FEILD" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;employer&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${employer}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="false">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">sender</stringProp>
                      <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00066&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;User not found !&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="INITIATEE FEILD" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;TESTING&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;intitatee&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${intitatee}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">status_msg</stringProp>
                      <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;ERR010&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;${status_msg}&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="INITIATER FEILD" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;TESTNG&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;intiater&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${intiater}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">smg_initiatter</stringProp>
                      <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;ERR010&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;${smg_initiatter}&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AMOUNT LESS THAN LIMIT" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;-1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;minust_amount&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${minust_amount}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00905&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;General Error&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AMOUNT NOT ENOUGHT" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;10000000&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;bal_not_enought&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${bal_not_enought}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;000042&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;Not enough balance.&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SCHEULEID" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;TESTING&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;scheule&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${scheule}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;000030&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;General fail exception&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SCHEULEID is DOUPLICATED" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;scheule_douplicated&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${scheule_douplicated}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">//COMMAND/STATUS/text()=&apos;E0212&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">//COMMAND/STATUSMSG/text()=&apos;General Error&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">count_val</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
            </CounterConfig>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Salary Transfer FC-${count_val}" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Database" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="ScheduleID" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String scheduleUpdate =&quot;&apos;17731010&apos;,&apos;17731030&apos;,&apos;17731050&apos;,&apos;17731051&apos;,&apos;17731052&apos;,&apos;17731053&apos;,&apos;17731054&apos;,&apos;17731055&apos;,&apos;17731056&apos;,&apos;17731057&apos;,&apos;17731058&apos;,&apos;17731059&apos;,&apos;17731060&apos;,&apos;17731061&apos;,&apos;17731062&apos;,&apos;17731063&apos;,&apos;17731064&apos;,&apos;17731065&apos;,&apos;17731066&apos;,&apos;17731067&apos;,&apos;17731068&apos;,&apos;17731069&apos;,&apos;17731070&apos;,&apos;17731071&apos;,&apos;17731072&apos;,&apos;17731073&apos;,&apos;17731074&apos;,&apos;17731075&apos;,&apos;17731076&apos;,&apos;17731077&apos;,&apos;17731078&apos;,&apos;17731079&apos;,&apos;17731080&apos;,&apos;17731081&apos;,&apos;17731082&apos;,&apos;17731083&apos;,&apos;17731084&apos;,&apos;17731085&apos;,&apos;17731086&apos;,&apos;17731087&apos;,&apos;17731088&apos;,&apos;17731089&apos;,&apos;17731090&apos;,&apos;17731091&apos;,&apos;17731092&apos;,&apos;17731093&apos;,&apos;17731094&apos;,&apos;17731095&apos;,&apos;17731096&apos;,&apos;17731097&apos;,&apos;17731098&apos;,&apos;17731099&apos;,&apos;17731100&apos;,&apos;17731101&apos;,&apos;17731102&apos;,&apos;17731103&apos;,&apos;17731104&apos;,&apos;17731105&apos;,&apos;17731106&apos;,&apos;17731107&apos;,&apos;17731108&apos;,&apos;17731109&apos;,&apos;17731110&apos;,&apos;17731111&apos;,&apos;17731112&apos;,&apos;17731113&apos;,&apos;17731114&apos;,&apos;17731115&apos;,&apos;17731116&apos;,&apos;17731117&apos;,&apos;17731118&apos;,&apos;17731119&apos;,&apos;17731120&apos;,&apos;17731121&apos;,&apos;17731122&apos;,&apos;17731123&apos;,&apos;17731124&apos;,&apos;17731125&apos;,&apos;17731126&apos;,&apos;17731127&apos;,&apos;17731128&apos;,&apos;17731129&apos;,&apos;17731130&apos;,&apos;17731131&apos;,&apos;17731132&apos;,&apos;17731133&apos;,&apos;17731134&apos;,&apos;17731135&apos;,&apos;17731136&apos;,&apos;17731137&apos;,&apos;17731138&apos;,&apos;17731139&apos;,&apos;17731140&apos;,&apos;17731141&apos;,&apos;17731142&apos;,&apos;17731143&apos;,&apos;17731144&apos;,&apos;17731145&apos;,&apos;17731146&apos;,&apos;17731147&apos;,&apos;17731148&apos;,&apos;17731149&apos;,&apos;17731150&apos;,&apos;17731151&apos;,&apos;17731152&apos;,&apos;17731153&apos;,&apos;17731154&apos;,&apos;17731155&apos;,&apos;17731156&apos;,&apos;17731157&apos;,&apos;17731158&apos;,&apos;17731159&apos;,&apos;17731160&apos;,&apos;17731161&apos;,&apos;17731162&apos;,&apos;17731163&apos;,&apos;17731164&apos;,&apos;17731165&apos;,&apos;17731166&apos;,&apos;17731167&apos;,&apos;17731168&apos;,&apos;17731169&apos;,&apos;17731170&apos;,&apos;17731171&apos;,&apos;17731172&apos;,&apos;17731173&apos;,&apos;17731174&apos;,&apos;17731175&apos;&quot;;
vars.put(&quot;scheduleUpd&quot;,scheduleUpdate);</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC-GET SCHEDULE_ID" enabled="true">
                <stringProp name="dataSource">dbConnection</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">
SELECT SCHEDULE_ID,STATUS FROM MWING.MTX_EMPLOYEE_SALARY_SCHEDULE where SCHEDULE_ID IN (${scheduleUpd})</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">scheduleId,status</stringProp>
                <stringProp name="resultVariable">result</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows">30</stringProp>
                <stringProp name="resultSetHandler">Store as Object</stringProp>
              </JDBCSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="71001929">${result}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">scheduleId_1</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="71001929">${result}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">status_1</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC UPDATE SCHEDULE_STATUS" enabled="true">
                <stringProp name="dataSource">dbConnection</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">UPDATE MWING.MTX_EMPLOYEE_SALARY_SCHEDULE SET STATUS = &apos;SI&apos;
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">status</stringProp>
                <stringProp name="resultVariable">result</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows">30</stringProp>
                <stringProp name="resultSetHandler">Store as Object</stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC DELETE  SCHEDULE_ID LOG" enabled="true">
                <stringProp name="dataSource">dbConnection</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">DELETE FROM MWING.EMPLOYEE_SALARY_LOG 
WHERE SCHEDULE_ID IN (${scheduleUpd})</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">scheduleId,status</stringProp>
                <stringProp name="resultVariable">result</stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows">30</stringProp>
                <stringProp name="resultSetHandler">Store as Object</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Validate Transfer" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">salary_tf_fc.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.group</stringProp>
              </CSVDataSet>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String validate =&quot;&lt;TRANSACTION&gt;&quot;+
	&quot;&lt;SERVICETYPE&gt;&quot;+vars.get(&quot;SERVICETYPE&quot;)+&quot;&lt;/SERVICETYPE&gt;&quot;+
	&quot;&lt;USERID&gt;&quot;+vars.get(&quot;USERID&quot;)+&quot;&lt;/USERID&gt;&quot;+
	&quot;&lt;ID&gt;3&lt;/ID&gt;&quot;+
	&quot;&lt;EMPLOYERID&gt;&quot;+vars.get(&quot;EMPLOYERID&quot;)+&quot;&lt;/EMPLOYERID&gt;&quot;+
	&quot;&lt;AMOUNT&gt;&quot;+vars.get(&quot;AMOUNT&quot;)+&quot;&lt;/AMOUNT&gt;&quot;+
	&quot;&lt;CURRENCY&gt;&quot;+vars.get(&quot;CURRENCY&quot;)+&quot;&lt;/CURRENCY&gt;&quot;+
	&quot;&lt;SCHEULEID&gt;&quot;+vars.get(&quot;SCHEULEID&quot;)+&quot;&lt;/SCHEULEID&gt;&quot;+
	&quot;&lt;SMS&gt;Y&lt;/SMS&gt;&quot;+
	&quot;&lt;PAYROLLPLUS&gt;N&lt;/PAYROLLPLUS&gt;&quot;+
	&quot;&lt;INITIATEEWINGID&gt;&quot;+vars.get(&quot;INITIATEEWINGID&quot;)+&quot;&lt;/INITIATEEWINGID&gt;&quot;+
	&quot;&lt;INITIATERWINGID&gt;&quot;+vars.get(&quot;INITIATERWINGID&quot;)+&quot;&lt;/INITIATERWINGID&gt;&quot;+
	&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;payroll&quot;,validate);	</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Validate Salary Transfer-${NO}" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MESSAGE" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${payroll}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">MESSAGE</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${validate-salary}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="false">
                  <stringProp name="XPathExtractor.default"></stringProp>
                  <stringProp name="XPathExtractor.refname">TYPE</stringProp>
                  <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                  <stringProp name="XPathExtractor.xpathQuery">/COMMAND</stringProp>
                  <boolProp name="XPathExtractor.validate">false</boolProp>
                  <boolProp name="XPathExtractor.tolerant">false</boolProp>
                  <boolProp name="XPathExtractor.namespace">false</boolProp>
                  <boolProp name="XPathExtractor.whitespace">true</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                  <boolProp name="XPathExtractor.fragment">true</boolProp>
                </XPathExtractor>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//COMMAND/STATUS/text()=&apos;200&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//COMMAND/STATUSMSG/text()=&apos;Successfully.&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Commite Transfer" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">salary_tf_fc.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.group</stringProp>
              </CSVDataSet>
              <hashTree/>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
	&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
	&quot;&lt;SERVICETYPE&gt;&quot;+vars.get(&quot;SERVICETYPE&quot;)+&quot;&lt;/SERVICETYPE&gt;&quot;+
	&quot;&lt;USERID&gt;&quot;+vars.get(&quot;USERID&quot;)+&quot;&lt;/USERID&gt;&quot;+
	&quot;&lt;EMPLOYERID&gt;&quot;+vars.get(&quot;EMPLOYERID&quot;)+&quot;&lt;/EMPLOYERID&gt;&quot;+
	&quot;&lt;INITIATERWINGID&gt;&quot;+vars.get(&quot;INITIATERWINGID&quot;)+&quot;&lt;/INITIATERWINGID&gt;&quot;+
	&quot;&lt;INITIATEEWINGID&gt;&quot;+vars.get(&quot;INITIATEEWINGID&quot;)+&quot;&lt;/INITIATEEWINGID&gt;&quot;+
	&quot;&lt;AMOUNT&gt;&quot;+vars.get(&quot;AMOUNT&quot;)+&quot;&lt;/AMOUNT&gt;&quot;+
	&quot;&lt;CURRENCY&gt;&quot;+vars.get(&quot;CURRENCY&quot;)+&quot;&lt;/CURRENCY&gt;&quot;+
	&quot;&lt;SCHEULEID&gt;&quot;+vars.get(&quot;SCHEULEID&quot;)+&quot;&lt;/SCHEULEID&gt;&quot;+
	&quot;&lt;SMS&gt;N&lt;/SMS&gt;&quot;+
	&quot;&lt;PAYROLLPLUS&gt;Y&lt;/PAYROLLPLUS&gt;&quot;+	
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;commit_salary&quot;,commit);	</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer ${NO}" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MESSAGE" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${commit_salary}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">MESSAGE</stringProp>
                    </elementProp>
                    <elementProp name="name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${count_val}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//COMMAND/STATUS/text()=&apos;200&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//COMMAND/STATUSMSG/text()=&apos;Successfully.&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">true</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                  <stringProp name="Scope.variable">TYPE</stringProp>
                </XPathAssertion>
                <hashTree/>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Negative Cases" enabled="false">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="USERID" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PPTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;userid&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${userid}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00066&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;User not found !&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EMPLOYER FEILD" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;employer&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${employer}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="false">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">sender</stringProp>
                      <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00066&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;User not found !&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="INITIATEE FEILD" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;TESTING&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;intitatee&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${intitatee}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">status_msg</stringProp>
                      <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;ERR010&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;${status_msg}&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="INITIATER FEILD" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;TESTNG&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;intiater&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${intiater}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">smg_initiatter</stringProp>
                      <stringProp name="XPathExtractor.matchNumber">0</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/COMMAND/STATUSMSG</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;ERR010&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;${smg_initiatter}&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AMOUNT LESS THAN LIMIT" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;-1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;minust_amount&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${minust_amount}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;00905&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;General Error&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AMOUNT NOT ENOUGHT" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PGTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;10000000&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;bal_not_enought&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${bal_not_enought}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;000042&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;Not enough balance.&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SCHEULEID" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;TESTING&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;scheule&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${scheule}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUS/text()=&apos;000030&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/COMMAND/STATUSMSG/text()=&apos;General fail exception&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SCHEULEID is DOUPLICATED" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA REQUEST" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String  commit =&quot;&lt;TRANSACTION&gt;&quot;+
&quot;&lt;SOURCE&gt;WEB&lt;/SOURCE&gt;&quot;+
&quot;&lt;SERVICETYPE&gt;EMPST&lt;/SERVICETYPE&gt;&quot;+
&quot;&lt;USERID&gt;PRTY2202171128116104&lt;/USERID&gt;&quot;+
&quot;&lt;EMPLOYERID&gt;PRTY2012281326113319&lt;/EMPLOYERID&gt;&quot;+
&quot;&lt;INITIATERWINGID&gt;qatest.payroll.usd&lt;/INITIATERWINGID&gt;&quot;+
&quot;&lt;INITIATEEWINGID&gt;00750247&lt;/INITIATEEWINGID&gt;&quot;+
&quot;&lt;AMOUNT&gt;1&lt;/AMOUNT&gt;&quot;+
&quot;&lt;CURRENCY&gt;USD&lt;/CURRENCY&gt;&quot;+
&quot;&lt;SCHEULEID&gt;17783179&lt;/SCHEULEID&gt;&quot;+
&quot;&lt;/TRANSACTION&gt;&quot;;
vars.put(&quot;scheule_douplicated&quot;,commit);	</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commit Salary Transfer in PSS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="MESSAGE" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${scheule_douplicated}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">MESSAGE</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${wingApimUrl}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${commit-salary}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Validate Salarty Transfer${NO}</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TYPE" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">//COMMAND/TYPE/text()=&apos;RCORESP&apos;
</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUS" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">//COMMAND/STATUS/text()=&apos;E0212&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="STATUSMSG" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">//COMMAND/STATUSMSG/text()=&apos;General Error&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">true</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                      <stringProp name="Scope.variable">TYPE</stringProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">count_val</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">true</boolProp>
            </CounterConfig>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
